on:
  workflow_call:
    inputs:
      STRICT:
        required: false
        type: string
        default: "true"
      upload:
        required: false
        type: string
        default: "false"
      APP_BUILD:
        required: false
        type: string
        default: "v1"
    secrets:
      MAPBOX_DOWNLOADS_TOKEN:
        required: true
      PUBLIC_MAPBOX_TOKEN:
        required: false
      APPLE_P12_BASE64:
        required: true
      APPLE_MOBILE_PROVISION_BASE64:
        required: true
      APPLE_CERTIFICATE_PASSWORD:
        required: true
      APPLE_ISSUER_ID:
        required: false
      APPLE_KEY_ID:
        required: false
      APPLE_APP_STORE_CONNECT_PRIVATE_KEY:
        required: false
      SENTRY_DSN:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false

jobs:
  ios-build:
    name: iOS Build
    runs-on: macos-15
    environment: ${{ ((startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, 'beta')) && 'production') || (startsWith(github.ref, 'refs/tags/v') && 'staging') }}
    env:
      STRICT: ${{ inputs.STRICT }}
      ENV: ${{ vars.ENV }}
      TERRASO_BACKEND: ${{ vars.TERRASO_BACKEND }}
      APP_BUILD: ${{ inputs.APP_BUILD }}
      GOOGLE_OAUTH_ANDROID_CLIENT_ID: ${{ vars.GOOGLE_OAUTH_ANDROID_CLIENT_ID }}
      GOOGLE_OAUTH_IOS_CLIENT_ID: ${{ vars.GOOGLE_OAUTH_IOS_CLIENT_ID }}
      GOOGLE_OAUTH_IOS_URI_SCHEME: ${{ vars.GOOGLE_OAUTH_IOS_URI_SCHEME }}
      MICROSOFT_OAUTH_CLIENT_ID: ${{ vars.MICROSOFT_OAUTH_CLIENT_ID }}
      MICROSOFT_SIGNATURE_HASH: ${{ vars.MICROSOFT_SIGNATURE_HASH }}
      MAPBOX_DOWNLOADS_TOKEN: ${{ secrets.MAPBOX_DOWNLOADS_TOKEN }}
      PUBLIC_MAPBOX_TOKEN: ${{ secrets.PUBLIC_MAPBOX_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ENABLED: ${{ vars.SENTRY_ENABLED }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DISABLE_AUTO_UPLOAD: ${{ inputs.upload == 'false' && 'true' || 'false' }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}
      CLANG: clang
      CLANGPLUSPLUS: clang++
      LD: clang
      LDPLUSPLUS: clang++

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".tool-versions"
          cache: "npm"
          cache-dependency-path: dev-client/package-lock.json

      - name: Install Node dependencies
        working-directory: dev-client
        run: npm ci

      - name: Generate ios directory
        working-directory: dev-client
        run: npm run prebuild -- -p ios

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          working-directory: dev-client

      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2"

      - name: Build iOS App
        uses: yukiarrr/ios-build-action@v1.12.0
        with:
          project-path: dev-client/ios/LandPKSSoilID.xcodeproj
          p12-base64: ${{ secrets.APPLE_P12_BASE64 }}
          mobileprovision-base64: ${{ secrets.APPLE_MOBILE_PROVISION_BASE64 }}
          code-signing-identity: "iPhone Distribution"
          team-id: ${{ vars.APPLE_TEAM_ID }}
          certificate-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          workspace-path: dev-client/ios/LandPKSSoilID.xcworkspace
          scheme: LandPKSSoilID

      - name: Upload app to TestFlight
        uses: apple-actions/upload-testflight-build@v3
        if: ${{ inputs.upload == 'true' }}
        with:
          app-path: "output.ipa"
          issuer-id: ${{ secrets.APPLE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPLE_KEY_ID }}
          api-private-key: ${{ secrets.APPLE_APP_STORE_CONNECT_PRIVATE_KEY }}
