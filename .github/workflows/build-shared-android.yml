on:
  workflow_call:
    inputs:
      STRICT:
        required: false
        type: string
        default: 'true'
      upload:
        required: false
        type: string
        default: 'false'
      APP_BUILD:
        required: false
        type: string
        default: 'v1'
    secrets:
      MAPBOX_DOWNLOADS_TOKEN:
        required: true
      PUBLIC_MAPBOX_TOKEN:
        required: false
      ANDROID_SIGNING_KEY:
        required: false
      ANDROID_KEY_STORE_PASSWORD:
        required: false
      ANDROID_KEY_PASSWORD:
        required: false
      ANDROID_SERVICE_ACCOUNT_JSON_TEXT:
        required: false
      SENTRY_DSN:
        required: false
      SENTRY_AUTH_TOKEN:
        required: false

jobs:
  android-build:
    name: Android Build
    runs-on: ubuntu-latest
    environment: ${{ ((startsWith(github.ref, 'refs/tags/v') && !contains(github.ref_name, 'beta')) && 'production') || (startsWith(github.ref, 'refs/tags/v') && 'staging') }}
    env:
      STRICT: ${{ inputs.STRICT }}
      ENV: ${{ vars.ENV }}
      TERRASO_BACKEND: ${{ vars.TERRASO_BACKEND }}
      APP_BUILD: ${{ inputs.APP_BUILD }}
      GOOGLE_OAUTH_ANDROID_CLIENT_ID: ${{ vars.GOOGLE_OAUTH_ANDROID_CLIENT_ID }}
      GOOGLE_OAUTH_IOS_CLIENT_ID: ${{ vars.GOOGLE_OAUTH_IOS_CLIENT_ID }}
      GOOGLE_OAUTH_IOS_URI_SCHEME: ${{ vars.GOOGLE_OAUTH_IOS_URI_SCHEME }}
      MICROSOFT_OAUTH_CLIENT_ID: ${{ vars.MICROSOFT_OAUTH_CLIENT_ID }}
      MICROSOFT_SIGNATURE_HASH: ${{ vars.MICROSOFT_SIGNATURE_HASH }}
      MAPBOX_DOWNLOADS_TOKEN: ${{ secrets.MAPBOX_DOWNLOADS_TOKEN }}
      PUBLIC_MAPBOX_TOKEN: ${{ secrets.PUBLIC_MAPBOX_TOKEN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      SENTRY_ENABLED: ${{ vars.SENTRY_ENABLED }}
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      SENTRY_DISABLE_AUTO_UPLOAD: ${{ inputs.upload == 'false' && 'true' || 'false' }}
      SENTRY_ORG: ${{ vars.SENTRY_ORG }}
      SENTRY_PROJECT: ${{ vars.SENTRY_PROJECT }}

    steps:
      - name: Check out git repository
        uses: actions/checkout@v5

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.tool-versions'
          cache: 'npm'
          cache-dependency-path: dev-client/package-lock.json

      - name: Install Node dependencies
        working-directory: dev-client
        run: npm ci

      - name: Restore Android Expo cache
        uses: actions/cache@v4
        with:
          path: dev-client/android
          key: expo-cache-${{ runner.os }}-android-${{ hashFiles('**/package-lock.json', '**/app.config.ts') }}
          restore-keys: expo-cache-${{ runner.os }}-android-

      - name: Generate android directory
        working-directory: dev-client
        run: npm run prebuild -- -p android

      - name: Set up our JDK environment
        uses: actions/setup-java@v5
        with:
          java-version-file: '.tool-versions'
          distribution: 'temurin'
          cache: gradle

      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-wrapper-

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Build Android app bundle
        working-directory: ./dev-client/android
        run: ./gradlew bundleRelease

      - name: Sign Android app bundle
        if: ${{ inputs.upload == 'true' }}
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./dev-client/android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
          alias: ${{ vars.ANDROID_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Upload App to Google Play
        if: ${{ inputs.upload == 'true' }}
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.ANDROID_SERVICE_ACCOUNT_JSON_TEXT }}
          releaseName: 'LandPKS Soil ID'
          packageName: org.terraso.landpks
          releaseFiles: ./dev-client/android/app/build/outputs/bundle/release/*.aab
          track: internal
          status: draft
          # changesNotSentForReview: true
          inAppUpdatePriority: 2
